{"version":3,"file":"ObjectTemplate.js","sourceRoot":"","sources":["../ObjectTemplate.ts"],"names":[],"mappings":"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","sourcesContent":["import * as serializer from './serializer';\nimport { SupertypeLogger } from './SupertypeLogger';\ntype CreateTypeForName = {\n    name?: string;\n    toClient?: boolean;\n    toServer?: boolean;\n    isLocal?: boolean;\n}\n\ntype Getter = {\n    get: any;\n}\n\n/**\n * this is pretty much the class (the template itself)\n * Try to unify this with the Supertype Type (maybe make this a partial, have supertype extend this)\n */\ntype ConstructorType = Function & {\n    amorphicClassName: any;\n    __shadowParent__: any;\n    props?: any;\n    __parent__: any;\n    __name__: any;\n    __createParameters__: any;\n    functionProperties: any;\n    isObjectTemplate: any;\n    extend: any;\n    staticMixin: any;\n    mixin: any;\n    fromPOJO: any;\n    fromJSON: any;\n    getProperties: (includeVirtual) => any;\n    prototype: any;\n    defineProperties: any;\n    objectProperties: any;\n    parentTemplate: any;\n    createProperty: any;\n    __template__: any;\n    __injections__: any;\n}\n\ntype ObjectTemplateClone = typeof ObjectTemplate;\n\n\n/**\n * Allow the property to be either a boolean a function that returns a boolean or a string\n * matched against a rule set array of string in ObjectTemplate\n *\n * @param  prop unknown\n * @param ruleSet unknown\n *\n * @returns {function(this:ObjectTemplate)}\n */\nfunction processProp(prop, ruleSet) {\n    var ret = null;\n\n    if (typeof (prop) === 'function') {\n        ret = prop.call(ObjectTemplate);\n    }\n    else if (typeof (prop) === 'string') {\n        ret = false;\n\n        if (ruleSet) {\n            ruleSet.map(function i(rule) {\n                // this will always execute\n                if (!ret) {\n                    // double equals or single equals?\n                    ret = rule == prop;\n                }\n            });\n        }\n    }\n    else if (prop instanceof Array) {\n        prop.forEach(function h(prop) {\n            ret = ret || processProp(prop, ruleSet);\n        });\n    }\n    else {\n        ret = prop;\n    }\n\n    return ret;\n}\n\nfunction pruneExisting(obj, props) {\n    var newProps = {};\n\n    for (var prop in props) {\n        if (typeof(obj[prop]) === 'undefined') {\n            newProps[prop] = props[prop];\n        }\n    }\n\n    return newProps;\n}\n\n/**\n * the og ObjectTemplate, what everything picks off of\n */\nexport class ObjectTemplate {\n\n    static lazyTemplateLoad: any;\n    static isLocalRuleSet: any;\n    static nextId: any; // for stashObject\n    static __exceptions__: any;\n\n    static __templates__: ConstructorType[];\n    static toServerRuleSet: string[];\n    static toClientRuleSet: string[];\n\n    static templateInterceptor: any;\n    static __dictionary__: { [key: string]: ConstructorType };\n    static __anonymousId__: number;\n    static __templatesToInject__: {};\n    static logger: any;\n    static __templateUsage__: any;\n    static __injections__: Function[];\n    static __toClient__: boolean;\n\n    static amorphicStatic = ObjectTemplate;\n    /**\n     * Purpose unknown\n     */\n    static performInjections() {\n        this.getClasses();\n        if (this.__templatesToInject__) {\n            const objectTemplate = this;\n\n            for (const templateName in this.__templatesToInject__) {\n                const template = this.__templatesToInject__[templateName];\n\n                template.inject = function inject(injector) {\n                    objectTemplate.inject(this, injector);\n                };\n\n                this._injectIntoTemplate(template);\n            }\n        }\n    }\n\n    static init() {\n        this.__templateUsage__ = {};\n        this.__injections__ = [];\n        this.__dictionary__ = {};\n        this.__anonymousId__ = 1;\n        this.__templatesToInject__ = {};\n        this.logger = this.createLogger(); // Create a default logger\n    }\n\n    static getTemplateByName(name) {\n        return this.getClasses()[name];\n    }\n\n    /**\n * Purpose unknown\n *\n * @param {unknown} template unknown\n * @param {unknown} name unknown\n * @param {unknown} props unknown\n */\n    static setTemplateProperties(template, name, props) {\n        this.__templatesToInject__[name] = template;\n        this.__dictionary__[name] = template;\n        template.__name__ = name;\n        template.__injections__ = [];\n        template.__objectTemplate__ = this;\n        template.__children__ = [];\n        template.__toClient__ = props.__toClient__;\n        template.__toServer__ = props.__toServer__;\n    }\n\n    /**\n     * Purpose unknown\n     *\n     * @param {unknown} props unknown\n     *\n     * @returns {unknown}\n     */\n    static getTemplateProperties(props) {\n        let templateProperties: { __toClient__?: any; __toServer__?: any } = {};\n\n        if (ObjectTemplate.__toClient__ == false) {\n            props.toClient = false;\n        }\n\n        if (processProp(props.isLocal, this.isLocalRuleSet)) {\n            props.toServer = false;\n            props.toClient = false;\n        }\n\n        templateProperties.__toClient__ = processProp(props.toClient, this.toClientRuleSet) != false;\n        templateProperties.__toServer__ = processProp(props.toServer, this.toServerRuleSet) != false;\n\n        return templateProperties;\n    }\n\n    /**\n        * Create an object template that is instantiated with the new operator.\n        * properties is\n        *\n        * @param {unknown} name the name of the template or an object with\n        *        name - the name of the class\n        *        toClient - whether the object is to be shipped to the client (with semotus)\n        *        toServer - whether the object is to be shipped to the server (with semotus)\n        *        isLocal - equivalent to setting toClient && toServer to false\n        * @param {unknown} properties an object whose properties represent data and function\n        * properties of the object.  The data properties may use the defineProperty\n        * format for properties or may be properties assigned a Number, String or Date.\n        *\n        * @returns {*} the object template\n        */\n\n    static create(name: string | CreateTypeForName, properties) {\n        /** this block only executes on createtypeforname */\n        if (name && !(typeof (name) === 'string') && name.name) {\n            var props = name;\n            name = props.name;\n        }\n        else {\n            props = {};\n        }\n\n        if (typeof (name) !== 'string' || name.match(/[^A-Za-z0-9_]/)) {\n            throw new Error('incorrect template name');\n        }\n\n        if (typeof (properties) !== 'object') {\n            throw new Error('missing template property definitions');\n        }\n\n        const createProps = this.getTemplateProperties(props);\n\n        if (typeof (this.templateInterceptor) === 'function') {\n            this.templateInterceptor('create', name, properties);\n        }\n\n        let template;\n\n        if (properties) {\n            template = this._createTemplate(null, Object, properties, createProps, name);\n        }\n        else {\n            template = this._createTemplate(null, Object, name, createProps, name);\n        }\n\n        this.setTemplateProperties(template, name, createProps);\n        template.__createProps__ = props;\n\n        return template;\n    }\n\n\n    /**\n     * Extend and existing (parent template)\n     *\n     * @param {unknown} parentTemplate unknown\n     * @param {unknown} name the name of the template or an object with\n     *        name - the name of the class\n     *        toClient - whether the object is to be shipped to the client (with semotus)\n     *        toServer - whether the object is to be shipped to the server (with semotus)\n     *        isLocal - equivalent to setting toClient && toServer to false\n     * @param {unknown} properties are the same as for create\n     *\n     * @returns {*} the object template\n     */\n    static extend(parentTemplate, name: string | CreateTypeForName, properties) {\n        let props;\n        let createProps;\n\n        if (!parentTemplate.__objectTemplate__) {\n            throw new Error('incorrect parent template');\n        }\n\n        if (typeof (name) !== 'undefined' && typeof (name) !== 'string' && name.name) {\n            props = name;\n            name = props.name;\n        }\n        else {\n            props = parentTemplate.__createProps__;\n        }\n\n        if (typeof (name) !== 'string' || name.match(/[^A-Za-z0-9_]/)) {\n            throw new Error('incorrect template name');\n        }\n\n        if (typeof (properties) !== 'object') {\n            throw new Error('missing template property definitions');\n        }\n\n        const existingTemplate = this.__dictionary__[name];\n\n        if (existingTemplate) {\n            if (existingTemplate.__parent__ != parentTemplate) {\n                if (existingTemplate.__parent__.__name__ != parentTemplate.__name__) {\n                    // eslint-disable-next-line no-console\n                    console.log(`WARN: Attempt to extend ${parentTemplate.__name__} as ${name} but ${name} was already extended from ${existingTemplate.__parent__.__name__}`);\n                }\n            }\n            else {\n                this.mixin(existingTemplate, properties);\n\n                return existingTemplate;\n            }\n        }\n\n        if (props) {\n            createProps = this.getTemplateProperties(props);\n        }\n\n        if (typeof (this.templateInterceptor) === 'function') {\n            this.templateInterceptor('extend', name, properties);\n        }\n\n        let template;\n\n        if (properties) {\n            template = this._createTemplate(null, parentTemplate, properties, parentTemplate, name);\n        }\n        else {\n            template = this._createTemplate(null, parentTemplate, name, parentTemplate, name);\n        }\n\n        if (createProps) {\n            this.setTemplateProperties(template, name, createProps);\n        }\n        else {\n            this.setTemplateProperties(template, name, parentTemplate);\n        }\n        template.__createProps__ = props;\n\n        // Maintain graph of parent and child templates\n        template.__parent__ = parentTemplate;\n        parentTemplate.__children__.push(template);\n\n        return template;\n    }\n\n    static mixin(template, properties) {\n        if (typeof (this.templateInterceptor) === 'function') {\n            this.templateInterceptor('create', template.__name__, properties);\n        }\n\n        return this._createTemplate(template, null, properties, template, template.__name__);\n    }\n\n    /**\n    * Purpose unknown\n    *\n    * @param {unknown} template unknown\n    * @param {unknown} properties unknown\n    */\n    static staticMixin(template, properties) {\n        for (const prop in properties) {\n            template[prop] = properties[prop];\n        }\n    }\n\n    /**\n     * Add a function that will fire on object creation\n     *\n     * @param {unknown} template unknown\n     * @param {Function} injector unknown\n     */\n    static inject(template, injector: Function) {\n        template.__injections__.push(injector);\n    }\n\n    /**\n     * Add a function that will fire on all object creations (apparently)? Just a guess\n     *\n     * @param {Function} injector - unknown\n     */\n    static globalInject(injector: Function) {\n        this.__injections__.push(injector);\n    }\n\n    /**\n     * Create the template if it needs to be created\n     * @param [unknown} template to be created\n     */\n    static createIfNeeded(template?, thisObj?) {\n        if (template.__createParameters__) {\n            const createParameters = template.__createParameters__;\n            for (var ix = 0; ix < createParameters.length; ++ix) {\n                const params = createParameters[ix];\n                template.__createParameters__ = undefined;\n                this._createTemplate(params[0], params[1], params[2], params[3], params[4], true);\n            }\n            if (template._injectProperties) {\n                template._injectProperties();\n            }\n            if (thisObj) {\n                //var copy = new template();\n                const prototypes = [template.prototype];\n                let parent = template.__parent__;\n                while (parent) {\n                    prototypes.push(parent.prototype);\n                    parent = parent.__parent__;\n                }\n                for (var ix = prototypes.length - 1; ix >= 0; --ix) {\n                    const props = Object.getOwnPropertyNames(prototypes[ix]);\n                    props.forEach((val, ix) => {\n                        Object.defineProperty(thisObj, props[ix], Object.getOwnPropertyDescriptor(prototypes[ix], props[ix]));\n                    });\n                }\n                thisObj.__proto__ = template.prototype;\n            }\n        }\n    }\n\n    static getClasses() {\n        if (this.__templates__) {\n            for (let ix = 0; ix < this.__templates__.length; ++ix) {\n                var template = this.__templates__[ix];\n                this.__dictionary__[constructorName(template)] = template;\n                this.__templatesToInject__[constructorName(template)] = template;\n                processDeferredTypes(template);\n            }\n            this.__templates__ = undefined;\n            for (const templateName1 in this.__dictionary__) {\n                var template = this.__dictionary__[templateName1];\n                const parentTemplateName = constructorName(Object.getPrototypeOf(template.prototype).constructor);\n                template.__shadowParent__ = this.__dictionary__[parentTemplateName];\n                if (template.__shadowParent__) {\n                    template.__shadowParent__.__shadowChildren__.push(template);\n                }\n                template.props = {};\n                const propst = ObjectTemplate._getDefineProperties(template, undefined, true);\n                for (const propd in propst) {\n                    template.props[propd] = propst[propd];\n                }\n            }\n            if (this.__exceptions__) {\n                throw new Error(this.__exceptions__.map(createMessageLine).join('\\n'));\n            }\n        }\n        function createMessageLine(exception) {\n            return exception.func(exception.class(), exception.prop);\n        }\n        function processDeferredTypes(template) {\n            if (template.prototype.__deferredType__) {\n                for (const prop in template.prototype.__deferredType__) {\n                    const defineProperty = template.defineProperties[prop];\n                    if (defineProperty) {\n                        const type = template.prototype.__deferredType__[prop]();\n                        if (defineProperty.type === Array) {\n                            defineProperty.of = type;\n                        }\n                        else {\n                            defineProperty.type = type;\n                        }\n                    }\n                }\n            }\n        }\n        return this.__dictionary__;\n\n        function constructorName(constructor) {\n            const namedFunction = constructor.toString().match(/function ([^(]*)/);\n            return namedFunction ? namedFunction[1] : null;\n        }\n\n    }\n\n    /**\n     * Overridden by other Type Systems to cache or globally identify objects\n     * Also assigns a unique internal Id so that complex structures with\n     * recursive objects can be serialized\n     *\n     * @param {unknown} obj - the object to be passed during creation time\n     * @param {unknown} template - unknown\n     *\n     * @returns {unknown}\n     *\n     * @private\n     */\n    static _stashObject(obj, template) {\n        if (!obj.__id__) {\n            if (!ObjectTemplate.nextId) {\n                ObjectTemplate.nextId = 1;\n            }\n\n            obj.__id__ = 'local-' + template.__name__ + '-' + ++ObjectTemplate.nextId;\n        }\n\n        return false;\n    }\n\n\n    /**\n     * Overridden by other Type Systems to inject other elements\n     *\n     * @param {_template} _template - the object to be passed during creation time\n     * \n     * @private\n     * */\n    static _injectIntoTemplate(_template) { };\n\n    /**\n     * Used by template setup to create an property descriptor for use by the constructor\n     *\n     * @param {unknown} propertyName is the name of the property\n     * @param {unknown} defineProperty is the property descriptor passed to the template\n     * @param {unknown} objectProperties is all properties that will be processed manually.  A new property is\n     *                         added to this if the property needs to be initialized by value\n     * @param {unknown} defineProperties is all properties that will be passed to Object.defineProperties\n     *                         A new property will be added to this object\n     *\n     * @private\n     */\n    static _setupProperty(propertyName, defineProperty, objectProperties, defineProperties) {\n        // Determine whether value needs to be re-initialized in constructor\n        const value = defineProperty.value;\n        const byValue = value && typeof (value) !== 'number' && typeof (value) !== 'string';\n\n        if (byValue || !Object.defineProperties || defineProperty.get || defineProperty.set) {\n            objectProperties[propertyName] = {\n                init: defineProperty.value,\n                type: defineProperty.type,\n                of: defineProperty.of,\n                byValue\n            };\n\n            delete defineProperty.value;\n        }\n\n        // When a super class based on objectTemplate don't transport properties\n        defineProperty.toServer = false;\n        defineProperty.toClient = false;\n        defineProperties[propertyName] = defineProperty;\n\n        // Add getters and setters\n        if (defineProperty.get || defineProperty.set) {\n            const userSetter = defineProperty.set;\n\n            defineProperty.set = (function d() {\n                // Use a closure to record the property name which is not passed to the setter\n                const prop = propertyName;\n\n                return function c(value) {\n                    if (userSetter) {\n                        value = userSetter.call(this, value);\n                    }\n\n                    if (!defineProperty.isVirtual) {\n                        this[`__${prop}`] = value;\n                    }\n                };\n            })();\n\n            const userGetter = defineProperty.get;\n\n            defineProperty.get = (function get() {\n                // Use closure to record property name which is not passed to the getter\n                const prop = propertyName;\n\n                return function b() {\n                    if (userGetter) {\n                        if (defineProperty.isVirtual) {\n                            return userGetter.call(this, undefined);\n                        }\n\n                        return userGetter.call(this, this[`__${prop}`]);\n                    }\n\n                    return this[`__${prop}`];\n                };\n            })();\n\n            if (!defineProperty.isVirtual) {\n                defineProperties[`__${propertyName}`] = { enumerable: false, writable: true };\n            }\n\n            delete defineProperty.value;\n            delete defineProperty.writable;\n        }\n    }\n\n    /**\n     * Clone an object created from an ObjectTemplate\n     * Used only within supertype (see copyObject for general copy)\n     *\n     * @param obj is the source object\n     * @param template is the template used to create the object\n     *\n     * @returns {*} a copy of the object\n     */\n    // Function to clone simple objects using ObjectTemplate as a guide\n    static clone(obj, template?) {\n        let copy;\n\n        if (obj instanceof Date) {\n            return new Date(obj.getTime());\n        }\n        else if (obj instanceof Array) {\n            copy = [];\n\n            for (let ix = 0; ix < obj.length; ++ix) {\n                copy[ix] = this.clone(obj[ix], template);\n            }\n\n            return copy;\n        }\n        else if (template && obj instanceof template) {\n            copy = new template();\n\n            for (const prop in obj) {\n                if (prop != '__id__' && !(obj[prop] instanceof Function)) {\n                    const defineProperty = this._getDefineProperty(prop, template) || {};\n\n                    if (obj.hasOwnProperty(prop)) {\n                        copy[prop] = this.clone(obj[prop], defineProperty.of || defineProperty.type || null);\n                    }\n                }\n            }\n\n            return copy;\n        }\n        else if (obj instanceof Object) {\n            copy = {};\n\n            for (const propc in obj) {\n                if (obj.hasOwnProperty(propc)) {\n                    copy[propc] = this.clone(obj[propc]);\n                }\n            }\n\n            return copy;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    /**\n     * Overridden by other Type Systems to be able to create remote functions or\n     * otherwise intercept function calls\n     *\n     * @param {unknown} _propertyName is the name of the function\n     * @param {unknown} propertyValue is the function itself\n     *\n     * @returns {*} a new function to be assigned to the object prototype\n     *\n     * @private\n     */\n    static _setupFunction(_propertyName, propertyValue) {\n        return propertyValue;\n    };\n\n    /**\n * Purpose unknown\n *\n * @param {unknown} obj unknown\n * @param {unknown} creator unknown\n *\n * @returns {unknown}\n */\n    static createCopy(obj, creator) {\n        return this.fromPOJO(obj, obj.__template__, null, null, undefined, null, null, creator);\n    }\n\n    /**\n     * Abstract function for benefit of Semotus\n     *\n     * @param {unknown} cb unknown\n     */\n    static withoutChangeTracking(cb) {\n        cb();\n    }\n\n    /**\n     * Purpose unknown\n     *\n     * @param {unknown} pojo unknown\n     * @param {unknown} template unknown\n     * @param {unknown} defineProperty unknown\n     * @param {unknown} idMap unknown\n     * @param {unknown} idQualifier unknown\n     * @param {unknown} parent unknown\n     * @param {unknown} prop unknown\n     * @param {unknown} creator unknown\n     *\n    * @returns {unknown}\n    */\n    static fromPOJO = serializer.fromPOJO;\n\n    /**\n    * Purpose unknown\n    *\n    * @param {unknown} str unknown\n    * @param {unknown} template unknown\n    * @param {unknown} idQualifier unknown\n    * objectTemplate.fromJSON(str, template, idQualifier)\n    * @returns {unknown}\n    */\n    static fromJSON = serializer.fromJSON;\n\n    /**\n     * Convert an object to JSON, stripping any recursive object references so they can be\n     * reconstituted later\n     *\n     * @param {unknown} obj unknown\n     * @param {unknown} cb unknown\n     *\n     * @returns {unknown}\n     */\n    static toJSONString = serializer.toJSONString;\n\n         /**\n     /**\n      * Find the right subclass to instantiate by either looking at the\n      * declared list in the subClasses define property or walking through\n      * the subclasses of the declared template\n      *\n      * @param {unknown} template unknown\n      * @param {unknown} objId unknown\n      * @param {unknown} defineProperty unknown\n      * @returns {*}\n      * @private\n      */\n     static _resolveSubClass(template, objId, defineProperty) {\n        let templateName = '';\n\n        if (objId.match(/-([A-Za-z0-9_:]*)-/)) {\n            templateName = RegExp.$1;\n        }\n\n    // Resolve template subclass for polymorphic instantiation\n        if (defineProperty && defineProperty.subClasses && objId != 'anonymous)') {\n            if (templateName) {\n                for (let ix = 0; ix < defineProperty.subClasses.length; ++ix) {\n                    if (templateName == defineProperty.subClasses[ix].__name__) {\n                        template = defineProperty.subClasses[ix];\n                    }\n                }\n            }\n        }\n        else {\n            const subClass = this._findSubClass(template, templateName);\n\n            if (subClass) {\n                template = subClass;\n            }\n        }\n        return template;\n    }\n\n    /**\n     * Walk recursively through extensions of template via __children__\n     * looking for a name match\n     *\n     * @param {unknown} template unknown\n     * @param {unknown} templateName unknown\n     * @returns {*}\n     * @private\n     */\n    static _findSubClass(template, templateName) {\n        if (template.__name__ == templateName) {\n            return template;\n        }\n\n        for (let ix = 0; ix < template.__children__.length; ++ix) {\n            const subClass = this._findSubClass(template.__children__[ix], templateName);\n\n            if (subClass) {\n                return subClass;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Return the highest level template\n     *\n     * @param {unknown} template unknown\n     *\n     * @returns {*}\n     *\n     * @private\n     */\n    static _getBaseClass(template) {\n        while (template.__parent__) {\n            template = template.__parent__;\n        }\n\n        return template;\n    }\n\n         /**\n      * An overridable function used to create an object from a template and optionally\n      * manage the caching of that object (used by derivative type systems).  It\n      * preserves the original id of an object\n      *\n      * @param {unknown} template of object\n      * @param {unknown} objId and id (if present)\n      * @param {unknown} defineProperty unknown\n      * @returns {*}\n      * @private\n      */\n     static _createEmptyObject(template, objId, defineProperty) {\n        template = this._resolveSubClass(template, objId, defineProperty);\n\n        const oldStashObject = this._stashObject;\n\n        if (objId) {\n            this._stashObject = function stashObject() {\n                return true;\n            };\n        }\n\n        const newValue = new template();\n        this._stashObject = oldStashObject;\n\n        if (objId) {\n            newValue.__id__ = objId;\n        }\n\n        return newValue;\n    }\n\n    /**\n     * Looks up a property in the defineProperties saved with the template cascading\n     * up the prototype chain to find it\n     *\n     * @param {unknown} prop is the property being sought\n     * @param {unknown} template is the template used to create the object containing the property\n     * @returns {*} the \"defineProperty\" structure for the property\n     * @private\n     */\n    static _getDefineProperty(prop, template) {\n        if (template && (template != Object) && template.defineProperties && template.defineProperties[prop]) {\n            return template.defineProperties[prop];\n        }\n        else if (template && template.parentTemplate) {\n            return this._getDefineProperty(prop, template.parentTemplate);\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns a hash of all properties including those inherited\n     *\n     * @param {unknown} template is the template used to create the object containing the property\n     * @param {unknown} returnValue unknown\n     * @param {unknown} includeVirtual unknown\n     * @returns {*} an associative array of each \"defineProperty\" structure for the property\n     * @private\n     */\n    static _getDefineProperties(template, returnValue, includeVirtual) {\n        if (!returnValue) {\n            returnValue = {};\n        }\n\n        if (template.defineProperties) {\n            for (const prop in template.defineProperties) {\n                if (includeVirtual || !template.defineProperties[prop].isVirtual) {\n                    returnValue[prop] = template.defineProperties[prop];\n                }\n            }\n        }\n\n        if (template.parentTemplate) {\n            this._getDefineProperties(template.parentTemplate, returnValue, includeVirtual);\n        }\n\n        return returnValue;\n    }\n\n    /**\n     * \n     * General function to create templates used by create, extend and mixin\n     *\n     * @param {unknown} mixinTemplate - template used for a mixin\n     * @param {unknown} parentTemplate - template used for an extend\n     * @param {unknown} propertiesOrTemplate - properties to be added/mxied in\n     * @param {unknown} createProperties unknown\n     * @param {unknown} templateName - the name of the template as it will be stored retrieved from dictionary\n     *\n     * @returns {Function}\n     *\n     * @private\n     */\n    private static _createTemplate(mixinTemplate?, parentTemplate?, propertiesOrTemplate?, createProperties?, templateName?, createTemplateNow?) {\n        // We will return a constructor that can be used in a new function\n        // that will call an init() function found in properties, define properties using Object.defineProperties\n        // and make copies of those that are really objects\n        var functionProperties:any = {};    // Will be populated with init function from properties\n        var objectProperties = {};    // List of properties to be processed by hand\n        var defineProperties = {};    // List of properties to be sent to Object.defineProperties()\n        var objectTemplate = this;\n        var templatePrototype;\n\n        function F() { }     // Used in case of extend\n\n        if (!this.lazyTemplateLoad) {\n            createTemplateNow = true;\n        }\n        // Setup variables depending on the type of call (create, extend, mixin)\n        if (createTemplateNow) {\n            if (mixinTemplate) {        // Mixin\n                this.createIfNeeded(mixinTemplate);\n                if (propertiesOrTemplate.isObjectTemplate) {\n                    this.createIfNeeded(propertiesOrTemplate);\n                    for (var prop in propertiesOrTemplate.defineProperties) {\n                        mixinTemplate.defineProperties[prop] = propertiesOrTemplate.defineProperties[prop];\n                    }\n\n                    for (var propp in propertiesOrTemplate.objectProperties) {\n                        mixinTemplate.objectProperties[propp] = propertiesOrTemplate.objectProperties[propp];\n                    }\n\n                    for (var propo in propertiesOrTemplate.functionProperties) {\n                        if (propo == 'init') {\n                            mixinTemplate.functionProperties.init = mixinTemplate.functionProperties.init || [];\n\n                            for (var ix = 0; ix < propertiesOrTemplate.functionProperties.init.length; ++ix) {\n                                mixinTemplate.functionProperties.init.push(propertiesOrTemplate.functionProperties.init[ix]);\n                            }\n                        }\n                        else {\n                            mixinTemplate.functionProperties[propo] = propertiesOrTemplate.functionProperties[propo];\n                        }\n                    }\n\n                    for (var propn in propertiesOrTemplate.prototype) {\n                        var propDesc = <Getter>Object.getOwnPropertyDescriptor(propertiesOrTemplate.prototype, propn);\n\n                        if (propDesc) {\n                            Object.defineProperty(mixinTemplate.prototype, propn, propDesc);\n\n                            if (propDesc.get) {\n                                (<Getter>Object.getOwnPropertyDescriptor(mixinTemplate.prototype, propn)).get.sourceTemplate = propDesc.get.sourceTemplate;\n                            }\n                        }\n                        else {\n                            mixinTemplate.prototype[propn] = propertiesOrTemplate.prototype[propn];\n                        }\n                    }\n\n                    mixinTemplate.props = {};\n\n                    var props = ObjectTemplate._getDefineProperties(mixinTemplate, undefined, true);\n\n                    for (var propm in props) {\n                        mixinTemplate.props[propm] = props[propm];\n                    }\n\n                    return mixinTemplate;\n                }\n                else {\n                    defineProperties = mixinTemplate.defineProperties;\n                    objectProperties = mixinTemplate.objectProperties;\n                    functionProperties = mixinTemplate.functionProperties;\n                    templatePrototype = mixinTemplate.prototype;\n                    parentTemplate = mixinTemplate.parentTemplate;\n                }\n            }\n            else {        // Extend\n                this.createIfNeeded(parentTemplate);\n                F.prototype = parentTemplate.prototype;\n                templatePrototype = new F();\n            }\n        }\n        /**\n         * Constructor that will be returned will only ever be created once\n         */\n        var template: ConstructorType = this.__dictionary__[templateName] ||\n            bindParams(templateName, objectTemplate, functionProperties,\n                defineProperties, parentTemplate, propertiesOrTemplate,\n                createProperties, objectProperties, templatePrototype,\n                createTemplateNow, mixinTemplate)\n\n\n        template.isObjectTemplate = true;\n\n        template.extend = (p1, p2) => objectTemplate.extend.call(objectTemplate, template, p1, p2);\n        template.mixin = (p1, p2) => objectTemplate.mixin.call(objectTemplate, template, p1, p2);\n        template.staticMixin = (p1, p2) => objectTemplate.staticMixin.call(objectTemplate, template, p1, p2);\n\n        template.fromPOJO = (pojo) => {\n            objectTemplate.createIfNeeded(template);\n            return objectTemplate.fromPOJO(pojo, template);\n        };\n\n        template.fromJSON = (str, idPrefix) => {\n            objectTemplate.createIfNeeded(template);\n            return objectTemplate.fromJSON(str, template, idPrefix);\n        };\n\n        template.getProperties = (includeVirtual) => {\n            objectTemplate.createIfNeeded(template);\n            return ObjectTemplate._getDefineProperties(template, undefined, includeVirtual);\n        };\n\n        if (!createTemplateNow) {\n            template.__createParameters__ = template.__createParameters__ || [];\n            template.__createParameters__.push([mixinTemplate, parentTemplate, propertiesOrTemplate, createProperties, templateName]);\n            return template;\n        }\n\n        template.prototype = templatePrototype;\n\n        var createProperty = createPropertyFunc.bind(null, functionProperties, templatePrototype, objectTemplate, templateName, objectProperties, defineProperties, parentTemplate);\n\n\n        // Walk through properties and construct the defineProperties hash of properties, the list of\n        // objectProperties that have to be reinstantiated and attach functions to the prototype\n        for (var propertyName in propertiesOrTemplate) {\n            createProperty(propertyName, null, propertiesOrTemplate, createProperties);\n        }\n\n        template.defineProperties = defineProperties;\n        template.objectProperties = objectProperties;\n\n        template.functionProperties = functionProperties;\n        template.parentTemplate = parentTemplate;\n\n\n        template.createProperty = createProperty;\n\n        template.props = {};\n\n        var propst = ObjectTemplate._getDefineProperties(template, undefined, true);\n\n        for (var propd in propst) {\n            template.props[propd] = propst[propd];\n        }\n\n        return template;\n    };\n\n\n    /**\n     * A function to clone the Type System\n     * @returns {o}\n     * @private\n     */\n    static _createObject(): ObjectTemplateClone {\n        const newFoo = Object.create(this);\n        newFoo.init();\n        return newFoo;\n    }\n\n    /**\n    * Purpose unknown\n    * @param {unknown} originally took a context that it threw away\n    * @returns {SupertypeLogger}\n    */\n    static createLogger(): SupertypeLogger {\n        return new SupertypeLogger();\n    }\n    \n\n}\n\n\nfunction createPropertyFunc(functionProperties, templatePrototype, objectTemplate, templateName, objectProperties, defineProperties, parentTemplate,\n    propertyName, propertyValue, properties, createProperties) {\n    if (!properties) {\n        properties = {};\n        properties[propertyName] = propertyValue;\n    }\n\n    // Record the initialization function\n    if (propertyName == 'init' && typeof (properties[propertyName]) === 'function') {\n        functionProperties.init = [properties[propertyName]];\n    } else {\n        var defineProperty = null; // defineProperty to be added to defineProperties\n\n        // Determine the property value which may be a defineProperties structure or just an initial value\n        var descriptor:any = {};\n\n        if (properties) {\n            descriptor = Object.getOwnPropertyDescriptor(properties, propertyName);\n        }\n\n        var type = 'null';\n\n        if (descriptor.get || descriptor.set) {\n            type = 'getset';\n        } else if (properties[propertyName] !== null) {\n            type = typeof (properties[propertyName]);\n        }\n\n        switch (type) {\n            // Figure out whether this is a defineProperty structure (has a constructor of object)\n            case 'object': // Or array\n                // Handle remote function calls\n                if (properties[propertyName].body && typeof (properties[propertyName].body) === 'function') {\n                    templatePrototype[propertyName] = objectTemplate._setupFunction(propertyName, properties[propertyName].body, properties[propertyName].on, properties[propertyName].validate);\n\n                    if (properties[propertyName].type) {\n                        templatePrototype[propertyName].__returns__ = properties[propertyName].type;\n                    }\n\n                    if (properties[propertyName].of) {\n                        templatePrototype[propertyName].__returns__ = properties[propertyName].of;\n                        templatePrototype[propertyName].__returnsarray__ = true;\n                    }\n\n                    templatePrototype[propertyName].__on__ = properties[propertyName].on;\n                    templatePrototype[propertyName].__validate__ = properties[propertyName].validate;\n                    templatePrototype[propertyName].__body__ = properties[propertyName].body;\n                    break;\n                } else if (properties[propertyName].type) {\n                    defineProperty = properties[propertyName];\n                    properties[propertyName].writable = true; // We are using setters\n\n                    if (typeof (properties[propertyName].enumerable) === 'undefined') {\n                        properties[propertyName].enumerable = true;\n                    }\n                    break;\n                } else if (properties[propertyName] instanceof Array) {\n                    defineProperty = {\n                        type: Object,\n                        value: properties[propertyName],\n                        enumerable: true,\n                        writable: true,\n                        isLocal: true\n                    };\n                    break;\n                } else { // Other crap\n                    defineProperty = {\n                        type: Object,\n                        value: properties[propertyName],\n                        enumerable: true,\n                        writable: true\n                    };\n                    break;\n                }\n\n            case 'string':\n                defineProperty = {\n                    type: String,\n                    value: properties[propertyName],\n                    enumerable: true,\n                    writable: true,\n                    isLocal: true\n                };\n                break;\n\n            case 'boolean':\n                defineProperty = {\n                    type: Boolean,\n                    value: properties[propertyName],\n                    enumerable: true,\n                    writable: true,\n                    isLocal: true\n                };\n                break;\n\n            case 'number':\n                defineProperty = {\n                    type: Number,\n                    value: properties[propertyName],\n                    enumerable: true,\n                    writable: true,\n                    isLocal: true\n                };\n                break;\n\n            case 'function':\n                templatePrototype[propertyName] = objectTemplate._setupFunction(propertyName, properties[propertyName]);\n                templatePrototype[propertyName].sourceTemplate = templateName;\n                break;\n\n            case 'getset': // getters and setters\n                descriptor.templateSource = templateName;\n                Object.defineProperty(templatePrototype, propertyName, descriptor);\n                (<Getter>Object.getOwnPropertyDescriptor(templatePrototype, propertyName)).get.sourceTemplate = templateName;\n                break;\n        }\n\n        // If a defineProperty to be added\n        if (defineProperty) {\n            if (typeof descriptor.toClient !== 'undefined') {\n                defineProperty.toClient = descriptor.toClient;\n            }\n            if (typeof descriptor.toServer !== 'undefined') {\n                defineProperty.toServer = descriptor.toServer;\n            }\n\n            objectTemplate._setupProperty(propertyName, defineProperty, objectProperties, defineProperties, parentTemplate, createProperties);\n            defineProperty.sourceTemplate = templateName;\n        }\n    }\n};\n\nfunction bindParams(templateName, objectTemplate, functionProperties,\n    defineProperties, parentTemplate, propertiesOrTemplate,\n    createProperties, objectProperties, templatePrototype,\n    createTemplateNow, mixinTemplate) {\n\n    function template() {\n        objectTemplate.createIfNeeded(template, this);\n        let templateRef: ConstructorType = <ConstructorType><Function>template;\n\n        objectTemplate.__templateUsage__[templateRef.__name__] = true;\n        var parent = templateRef.__parent__;\n        while (parent) {\n            objectTemplate.__templateUsage__[parent.__name__] = true;\n            var parent = parent.__parent__;\n        }\n\n        this.__template__ = templateRef;\n\n        if (objectTemplate.__transient__) {\n            this.__transient__ = true;\n        }\n\n        var prunedObjectProperties = pruneExisting(this, templateRef.objectProperties);\n        var prunedDefineProperties = pruneExisting(this, templateRef.defineProperties);\n\n        try {\n            // Create properties either with EMCA 5 defineProperties or by hand\n            if (Object.defineProperties) {\n                Object.defineProperties(this, prunedDefineProperties); // This method will be added pre-EMCA 5\n            }\n        } catch (e) {\n            // TODO: find a better way to deal with errors that are thrown\n            console.log(e); // eslint-disable-line no-console\n        }\n\n        this.fromRemote = this.fromRemote || objectTemplate._stashObject(this, templateRef);\n\n        this.copyProperties = function copyProperties(obj) {\n            for (var prop in obj) {\n                this[prop] = obj[prop];\n            }\n        };\n\n        // Initialize properties from the defineProperties value property\n        for (var propertyName in prunedObjectProperties) {\n            var defineProperty = prunedObjectProperties[propertyName];\n\n            if (typeof (defineProperty.init) !== 'undefined') {\n                if (defineProperty.byValue) {\n                    this[propertyName] = ObjectTemplate.clone(defineProperty.init, defineProperty.of || defineProperty.type || null);\n                } else {\n                    this[propertyName] = (defineProperty.init);\n                }\n            }\n        }\n\n\n        // Template level injections\n        for (var ix = 0; ix < templateRef.__injections__.length; ++ix) {\n            templateRef.__injections__[ix].call(this, this);\n        }\n\n        // Global injections\n        for (var j = 0; j < objectTemplate.__injections__.length; ++j) {\n            objectTemplate.__injections__[j].call(this, this);\n        }\n\n        this.__prop__ = function g(prop) {\n            return ObjectTemplate._getDefineProperty(prop, this.__template__);\n        };\n\n        this.__values__ = function f(prop) {\n            var defineProperty = this.__prop__(prop) || this.__prop__('_' + prop);\n\n            if (typeof (defineProperty.values) === 'function') {\n                return defineProperty.values.call(this);\n            }\n\n            return defineProperty.values;\n        };\n\n        this.__descriptions__ = function e(prop) {\n            var defineProperty = this.__prop__(prop) || this.__prop__('_' + prop);\n\n            if (typeof (defineProperty.descriptions) === 'function') {\n                return defineProperty.descriptions.call(this);\n            }\n\n            return defineProperty.descriptions;\n        };\n\n        // If we don't have an init function or are a remote creation call parent constructor otherwise call init\n        //  function who will be responsible for calling parent constructor to allow for parameter passing.\n        if (this.fromRemote || !templateRef.functionProperties.init || objectTemplate.noInit) {\n            if (parentTemplate && parentTemplate.isObjectTemplate) {\n                parentTemplate.call(this);\n            }\n        } else {\n            if (templateRef.functionProperties.init) {\n                for (var i = 0; i < templateRef.functionProperties.init.length; ++i) {\n                    templateRef.functionProperties.init[i].apply(this, arguments);\n                }\n            }\n        }\n\n        this.__template__ = templateRef;\n\n        this.toJSONString = function toJSONString(cb) {\n            return ObjectTemplate.toJSONString(this, cb);\n        };\n\n        /* Clone and object calling a callback for each referenced object.\n         The call back is passed (obj, prop, template)\n         obj - the parent object (except the highest level)\n         prop - the name of the property\n         template - the template of the object to be created\n         the function returns:\n         - falsy - clone object as usual with a new id\n         - object reference - the callback created the object (presumably to be able to pass init parameters)\n         - [object] - a one element array of the object means don't copy the properties or traverse\n         */\n        this.createCopy = function createCopy(creator) {\n            return ObjectTemplate.createCopy(this, creator);\n        };\n\n    };\n\n\n    let returnVal = <Function>template;\n\n    return returnVal as ConstructorType;\n}\n"]}